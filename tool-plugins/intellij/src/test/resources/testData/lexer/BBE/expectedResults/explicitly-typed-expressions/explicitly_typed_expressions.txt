import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
PUBLIC ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Specifying `string` as the explicit type for an `int` will produce the `string` representation of the `int`.')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('intVal')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('45')
; (';')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('strVal')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
< ('<')
string ('string')
> ('>')
identifier ('intVal')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('strVal')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Specifying `int` as the explicit type for a `boolean` would result in the conversion of `false` as `0` and `true`')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// as `1`.')
WHITE_SPACE ('\n    ')
boolean ('boolean')
WHITE_SPACE (' ')
identifier ('boolVal')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
BOOLEAN_LITERAL ('true')
; (';')
WHITE_SPACE ('\n    ')
identifier ('intVal')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
< ('<')
int ('int')
> ('>')
identifier ('boolVal')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('intVal')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// With `boolean` as the `explicit` type for a `decimal`, the boolean value would be `false` only if the `decimal`')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// value is `0`.')
WHITE_SPACE ('\n    ')
decimal ('decimal')
WHITE_SPACE (' ')
identifier ('decimalVal')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
- ('-')
DECIMAL_INTEGER_LITERAL ('10')
; (';')
WHITE_SPACE ('\n    ')
identifier ('boolVal')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
< ('<')
boolean ('boolean')
> ('>')
identifier ('decimalVal')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('boolVal')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
