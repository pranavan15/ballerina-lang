import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
type ('type')
WHITE_SPACE (' ')
identifier ('AccountNotFoundErrorData')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('accountID')
; (';')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Extended error types can be declared from `error` type. Thus `error` can be extended for single level.')
WHITE_SPACE ('\n')
type ('type')
WHITE_SPACE (' ')
identifier ('AccountNotFoundError')
WHITE_SPACE (' ')
error ('error')
< ('<')
string ('string')
, (',')
WHITE_SPACE (' ')
identifier ('AccountNotFoundErrorData')
> ('>')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Note that type `error` is a built-in reference type.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('getAccountBalance')
( ('(')
int ('int')
WHITE_SPACE (' ')
identifier ('accountID')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
( ('(')
int ('int')
| ('|')
identifier ('AccountNotFoundError')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Create an instance of the error record and return it.')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// The logic used here is a sample to demonstrate the concept of error handling.')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('accountID')
WHITE_SPACE (' ')
< ('<')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('100')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('AccountNotFoundError')
WHITE_SPACE (' ')
identifier ('accountNotFoundError')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
error ('error')
( ('(')
QUOTED_STRING_LITERAL ('"Account with ID: "')
WHITE_SPACE ('\n                                        ')
+ ('+')
WHITE_SPACE (' ')
identifier ('accountID')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('" is not found"')
, (',')
WHITE_SPACE ('\n                                        ')
{ ('{')
WHITE_SPACE (' ')
identifier ('accountID')
: (':')
WHITE_SPACE (' ')
< ('<')
string ('string')
> ('>')
identifier ('accountID')
WHITE_SPACE (' ')
} ('}')
) (')')
; (';')
WHITE_SPACE ('\n        ')
return ('return')
WHITE_SPACE (' ')
identifier ('accountNotFoundError')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE (' ')
else ('else')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
return ('return')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('600')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
PUBLIC ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// As a best practice, check whether an error occurrs.')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('r')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('getAccountBalance')
( ('(')
DECIMAL_INTEGER_LITERAL ('24')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Type-guard check (`is` check) for variable type checking.')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('r')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
int ('int')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('r')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE (' ')
else ('else')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
LINE_COMMENT ('// `error` type has 3 functions `reason()`, `detail()` and 'stacktarce()'. Only `reason()` can be set from construtor.')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Error occurred: "')
, (',')
WHITE_SPACE (' ')
identifier ('r')
. ('.')
identifier ('reason')
( ('(')
) (')')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('", accountID: "')
, (',')
WHITE_SPACE ('\n                        ')
identifier ('r')
. ('.')
identifier ('detail')
( ('(')
) (')')
. ('.')
identifier ('accountID')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
