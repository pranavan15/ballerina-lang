NAME
    Ballerina help run - Run Ballerina program source files, 
    binaries, or modules

SYNOPSIS
     ballerina run [-e] [--offline] [--observe]
         [--sourceroot] [-c|--config] [-printreturn] [-B]
         <balfile | module-name | balxfile>[:function] [args...]

DESCRIPTION
     Run command executes the given program or module.

     If a Ballerina source file (.bal file) or a module is
     given, the run command compiles and runs it. The compilation 
     is done internally and does not generate a binary file. 
 
     You may use the Ballerina build command to compile a source and 
     provide the generated binary file (.balx file) to the run command. 
     The binary runs much faster than a source file, because the source 
     file run requires a compilation phase. 

     You must have either a public function or a service(s) or both in
     order to run a program or a module. The function to run [:function]
     could also be specified, and if no function is specified and a
     function named 'main' would be considered the function to run if
     such a function exists.

     When both a function to run and services are present, run executes
     services first and then executes the main function.

OPTIONS
     -e <key=value>
         Sets Ballerina environment parameters as key/value pairs.
         If multiple parameters need to be provided, each parameter
         has to be specified using its own -e flag. Details of the
         environment parameters that the Ballerina standard library
         modules support can be found in the relevant API
         documentation.

     --offline
         In a module build, the dependencies are always checked from
         the remote repository (Ballerina Central) to check for latest 
         artifacts. If --offline is given, this remote check is not 
         done and the local artifacts will be used instead. 

     --observe
         Enables observability for the Ballerina program and lets
         users observe it through Jaeger (tracing) and Prometheus
         (metrics) by default. If --observe is given, it will display
         a log mentioning push/pull endpoints that will be used for
         Jaeger and Prometheus. Moreover, default configurations of
         Jaeger and Prometheus can be overridden using environment
         parameters or by defining them in ballerina.conf.

     --sourceroot <path>
         Provides the path to be taken as the root of the source. 
         Source will be looked up relative to the given source root 
         path.

     -c <config-file>
     --config <config-file>
         Provides the path to a Ballerina configuration file.
         The configuration file format is a subset of the TOML file
         format. It supports key/value pairs, tables, comments, and
         string, int, float and boolean value types. If a config
         file is not specified using [-c|--config], Ballerina looks
         for a default configuration file named `ballerina.conf`
         in the directory the source file(s) reside in.

     --printreturn
         Enables printing the value returned by the function invoked
         to the out stream, if a function is run.

     -B <key=value>
         Provides Ballerina VM options to be used by the runtime
         when executing a Ballerina program or module. VM options
         are key/value pairs. If multiple VM options need to be
         provided, each option has to be specified using its
         own -B flag.

     args... 
         The list of command line arguments for the Ballerina program 
         being run. The semantics of these arguments are defined by 
         the program design. 

DEFAULT BEHAVIOR
     Runs the function ('main' or specified function) in the given
     program or module.
     If a function is specified but not present, the run command fails.
     If no function is specified and there is no main function defined,
     it will look for a service.
     If no main function or service is present, the run command will fail.

EXAMPLES
     Run the 'main' function and/or services in the hello source program
     $ ballerina run hello.bal

     Run the 'main' function and/or services in the hello binary program
     $ ballerina run hello.balx

     Run the 'main' function and/or services in the hello module
     $ ballerina run hello

     Run the 'main' function in the math module with three program args:
     add, 10 and 5. If the second and third parameters of the 'main'
     function are of types int and int, the second and third arguments
     would be passed as integer values 10 and 5
     $ ballerina run math add 10 5

     Run the 'add' function in the math module with two program args:
     10 and 5. If the parameters of the 'add' function are of types int
     and int, the two arguments would be passed as integer values 10 and 5
     $ ballerina run math add 10 5
